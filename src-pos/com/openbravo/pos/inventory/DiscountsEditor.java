//    uniCenta oPOS  - Touch Friendly Point Of Sale
//    Copyright (C) 2008-2009 Openbravo, S.L.
//    http://www.unicenta.net/unicentaopos
//
//    This file is part of uniCenta oPOS
//
//    uniCenta oPOS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//   uniCenta oPOS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with uniCenta oPOS.  If not, see <http://www.gnu.org/licenses/>.

package com.openbravo.pos.inventory;

import com.openbravo.basic.BasicException;
import com.openbravo.beans.JCalendarDialog;
import com.openbravo.data.user.DirtyManager;
import com.openbravo.data.user.EditorRecord;
import com.openbravo.format.Formats;
import com.openbravo.pos.forms.AppLocal;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.DataLogicSales;
import java.awt.Component;
import java.util.Date;
import java.util.UUID;

/**
 *
 * @author  adrianromero
 */
public final class DiscountsEditor extends javax.swing.JPanel implements EditorRecord {

    private Object id;
    
    private AppView m_App;
    private DataLogicSales m_dlSales;

    /** Creates new form AttributesEditor */
    public DiscountsEditor(AppView app, DirtyManager dirty) {
        
        initComponents();

        m_jName.getDocument().addDocumentListener(dirty);
        m_jDiscountRate.getDocument().addDocumentListener(dirty);
        m_jStartDate.getDocument().addDocumentListener(dirty);
        m_jEndDate.getDocument().addDocumentListener(dirty);
        
        writeValueEOF();
    }
    
    public void activate() throws BasicException {
    }
    
    @Override
    public void writeValueEOF() {
        id = null;
        m_jName.setText(null);
        m_jName.setEnabled(false);
        m_jDiscountRate.setText(null);
        m_jDiscountRate.setEnabled(false);
        m_jStartDate.setText(null);
        m_jStartDate.setEnabled(false);
        m_jEndDate.setText(null);
        m_jEndDate.setEnabled(false);
    }
    @Override
    public void writeValueInsert() {
        id = UUID.randomUUID().toString();
        m_jName.setText(null);
        m_jName.setEnabled(true);
        m_jDiscountRate.setText(null);
        m_jDiscountRate.setEnabled(true);
        m_jStartDate.setText(null);
        m_jStartDate.setEnabled(true);
        m_jEndDate.setText(null);
        m_jEndDate.setEnabled(true);
    }
    @Override
    public void writeValueDelete(Object value) {

        Object[] attrset = (Object[]) value;
        id = attrset[0];
        m_jName.setText(Formats.STRING.formatValue(attrset[1]));
        m_jName.setEnabled(false);
        m_jDiscountRate.setText(Formats.DOUBLE.formatValue(attrset[2]));
        m_jDiscountRate.setEnabled(false);
        m_jStartDate.setText(Formats.TIMESTAMP.formatValue(attrset[3]));
        m_jStartDate.setEnabled(false);
        m_jEndDate.setText(Formats.TIMESTAMP.formatValue(attrset[4]));
        m_jEndDate.setEnabled(false);
    }
    @Override
    public void writeValueEdit(Object value) {

        Object[] attrset = (Object[]) value;
        id = attrset[0];
        m_jName.setText(Formats.STRING.formatValue(attrset[1]));
        m_jName.setEnabled(true);
        m_jDiscountRate.setText(Formats.DOUBLE.formatValue(attrset[2]));
        m_jDiscountRate.setEnabled(true);
        m_jStartDate.setText(Formats.TIMESTAMP.formatValue(attrset[3]));
        m_jStartDate.setEnabled(true);
        m_jEndDate.setText(Formats.TIMESTAMP.formatValue(attrset[4]));
        m_jEndDate.setEnabled(true);
    }

    @Override
    public Object createValue() throws BasicException {

        Object[] attrset = new Object[5];

        attrset[0] = id;
        attrset[1] = m_jName.getText();
        attrset[2] = Formats.DOUBLE.parseValue(m_jDiscountRate.getText());
        attrset[3] = Formats.TIMESTAMP.parseValue(m_jStartDate.getText());
        attrset[4] = Formats.TIMESTAMP.parseValue(m_jEndDate.getText());

        return attrset;
    }

    @Override
    public Component getComponent() {
        return this;
    }

    @Override
    public void refresh() {
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        m_jName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        m_jDiscountRate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        m_jStartDate = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        m_jEndDate = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText(AppLocal.getIntString("Label.Name")); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(10, 11, 80, 25);

        m_jName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        add(m_jName);
        m_jName.setBounds(94, 11, 200, 25);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("pos_messages"); // NOI18N
        jLabel1.setText(bundle.getString("Label.DiscountRate")); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(10, 42, 80, 25);
        add(m_jDiscountRate);
        m_jDiscountRate.setBounds(94, 42, 200, 25);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText(AppLocal.getIntString("Label.StartDate")); // NOI18N
        add(jLabel3);
        jLabel3.setBounds(10, 73, 80, 25);
        add(m_jStartDate);
        m_jStartDate.setBounds(94, 74, 200, 25);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/date.png"))); // NOI18N
        jButton1.setToolTipText("Open Calender");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(300, 70, 40, 33);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText(AppLocal.getIntString("Label.EndDate")); // NOI18N
        add(jLabel4);
        jLabel4.setBounds(10, 112, 80, 25);
        add(m_jEndDate);
        m_jEndDate.setBounds(94, 113, 200, 25);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/openbravo/images/date.png"))); // NOI18N
        jButton2.setToolTipText("Open Calender");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(300, 110, 40, 33);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Date date;
        try {
            date = (Date) Formats.TIMESTAMP.parseValue(m_jStartDate.getText());
        } catch (BasicException e) {
            date = null;
        }        
        date = JCalendarDialog.showCalendarTime(this, date);
        if (date != null) {
            m_jStartDate.setText(Formats.TIMESTAMP.formatValue(date));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Date date;
        try {
            date = (Date) Formats.TIMESTAMP.parseValue(m_jEndDate.getText());
        } catch (BasicException e) {
            date = null;
        }        
        date = JCalendarDialog.showCalendarTime(this, date);
        if (date != null) {
            m_jEndDate.setText(Formats.TIMESTAMP.formatValue(date));
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField m_jDiscountRate;
    private javax.swing.JTextField m_jEndDate;
    private javax.swing.JTextField m_jName;
    private javax.swing.JTextField m_jStartDate;
    // End of variables declaration//GEN-END:variables

}
